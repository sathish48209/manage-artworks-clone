[{"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\index.js":"1","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\App.js":"2","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\reportWebVitals.js":"3","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Dashboard\\Dashboard.js":"4","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\NewProject.js":"5","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\MyProjects.js":"6","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\Inbox.js":"7","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\AllProjects.js":"8","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Search\\Browse.js":"9","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Search\\Search.js":"10","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Dashboard\\DashboardTile.js":"11","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\ProjectContainer.js":"12","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\ProjectTile.js":"13","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Navbar\\Navbar.js":"14","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Reducers\\rootReducer.js":"15","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Actions\\Action.js":"16"},{"size":794,"mtime":1610292177013,"results":"17","hashOfConfig":"18"},{"size":1240,"mtime":1610281889301,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1041,"mtime":1610292663749,"results":"21","hashOfConfig":"18"},{"size":134,"mtime":1610197238396,"results":"22","hashOfConfig":"18"},{"size":137,"mtime":1610198006948,"results":"23","hashOfConfig":"18"},{"size":122,"mtime":1610197990176,"results":"24","hashOfConfig":"18"},{"size":141,"mtime":1610197953169,"results":"25","hashOfConfig":"18"},{"size":125,"mtime":1610198036225,"results":"26","hashOfConfig":"18"},{"size":125,"mtime":1610198049226,"results":"27","hashOfConfig":"18"},{"size":3038,"mtime":1610222093398,"results":"28","hashOfConfig":"18"},{"size":7751,"mtime":1610294493506,"results":"29","hashOfConfig":"18"},{"size":3757,"mtime":1610281692281,"results":"30","hashOfConfig":"18"},{"size":9617,"mtime":1610281956600,"results":"31","hashOfConfig":"18"},{"size":728,"mtime":1610294562820,"results":"32","hashOfConfig":"18"},{"size":1363,"mtime":1610293711959,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"buxgd5",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\index.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\App.js",[],["69","70"],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\reportWebVitals.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Dashboard\\Dashboard.js",["71","72","73"],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\NewProject.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\MyProjects.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\Inbox.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\AllProjects.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Search\\Browse.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Search\\Search.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Dashboard\\DashboardTile.js",["74"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\t\tflexGrow: 1,\n\t\t'& .MuiCardContent-root:last-child': {\n\t\t\t'paddingBottom': 0\n\t\t}\n\t},\n\tcardHeader: {\n\t\tbackgroundColor: '#ccc',\n\t\tpadding: '10px',\n\t\t'& span': {\n\t\t\tfontWeight: 700,\n\t\t\tfontSize: '1.25rem'\n\t\t}\n\t},\n\tcardContent: {\n\t\tpadding: 0,\n\t\t'& ul': {\n\t\t\tmaxWidth: 'inherit'\n\t\t},\n\t\t'& .dashBoardListItem': {\n\t\t\talignItems: 'center',\n\t\t\t'& .MuiListItemText-root span': {\n\t\t\t\tfontSize: '0.9rem',\n\t\t\t\tfontWeight: 500\n\t\t\t}\n\t\t},\n\t\t'& .dashBoardListItem:not(:last-child)': {\n\t\t\tborderBottom: '1px solid #ccc',\n\t\t}\n\t},\n\tlistItems: {\n    backgroundColor: theme.palette.background.paper,\n\t},\n\tinline: {\n    display: 'inline',\n\t},\n\tcardStatsContainer: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\t'& .cardStatBtn': {\n\t\t\tbackgroundColor: '#00ACC1',\n\t\t\tpadding: 0,\n\t\t\tborderRadius: 10,\n\t\t\t'& .MuiButton-label': {\n\t\t\t\tfontSize: '1.6rem'\n\t\t\t}\n\t\t},\n\t\t'& .cardStats': {\n\t\t\tmarginLeft: 10,\n\t\t\t'& .cardStat': {\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\tminWidth: 100,\n\t\t\t\t'& > p' : {\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tfontWeight: 700\n\t\t\t\t},\n\t\t\t\t'& span': {\n\t\t\t\t\tfontWeight: 700\n\t\t\t\t},\n\t\t\t\t'& .delayed': {\n\t\t\t\t\tcolor: 'red'\n\t\t\t\t},\n\t\t\t\t'& .onTime': {\n\t\t\t\t\tcolor: 'green'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'& .cardStat:first-child': {\n\t\t\t\tmarginBottom: 5\n\t\t\t}\n\t\t}\n\t}\n}));\n\nfunction DashboardTile({ dashboardData }) {\n\tconst classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n\t\t\t\tclassName={classes.cardHeader}\n        title={ dashboardData.title }\n      />\n      <CardContent\n\t\t\t\tclassName={classes.cardContent}\n\t\t\t>\n\t\t\t<List className={classes.listItems}>\n\t\t\t\t{\n\t\t\t\t\tdashboardData.processes.map((process, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ListItem alignItems=\"flex-start\" className=\"dashBoardListItem\" key={ index }>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={ process.name }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className={classes.cardStatsContainer}>\n\t\t\t\t\t\t\t\t\t<Button className=\"cardStatBtn\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\t\t\t\t\t{ process.totalProjects }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<div className='cardStats'>\n\t\t\t\t\t\t\t\t\t\t<div className='cardStat'>\n\t\t\t\t\t\t\t\t\t\t\t<p>OnTime</p>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"onTime\">{ process.onTimeProjects }</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='cardStat'>\n\t\t\t\t\t\t\t\t\t\t\t<p>Delayed</p>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"delayed\">{ process.delayedProjects }</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</List>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default DashboardTile\n","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\ProjectContainer.js",["75","76"],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Projects\\ProjectTile.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Components\\Navbar\\Navbar.js",["77","78","79","80","81","82","83","84"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport FolderSpecialIcon from '@material-ui/icons/FolderSpecial';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  cardImage: {\n    height: 40,\n    width: 150\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}))(Tooltip);\n\nfunction Navbar() {\n\tconst classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  /* const handleDrawerOpen = () => {\n    setOpen(true);\n  }; */\n\n  const handleDrawerToggle = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          { open ? \n            <NavLink to=\"/\">\n              <CardMedia\n                className={classes.cardImage}\n                image=\"assets/company-logo.png\"\n                title=\"Manage Artworks\"\n              /> \n            </NavLink>\n            : \n            null\n          }\n          \n          <IconButton onClick={handleDrawerToggle}>\n            <MenuOpenIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <NavLink to=\"/\">\n            {\n              open ? \n              <ListItem button>\n                <ListItemIcon><HomeIcon /></ListItemIcon>\n                <ListItemText primary=\"Dashboard\" />\n              </ListItem> : \n              <LightTooltip title=\"Dashboard\" placement=\"top\">\n                <ListItem button>\n                  <ListItemIcon><HomeIcon /></ListItemIcon>\n                  <ListItemText primary=\"Dashboard\" />\n                </ListItem>\n              </LightTooltip>\n            }\n          </NavLink>\n          <NavLink to=\"/newProject\">\n            {\n              open ? \n              <ListItem button>\n                <ListItemIcon><CheckCircleIcon /></ListItemIcon>\n                <ListItemText primary=\"Start a new Project\" />\n              </ListItem> : \n              <LightTooltip title=\"Start a new Project\" placement=\"top\">\n                <ListItem button>\n                  <ListItemIcon><CheckCircleIcon /></ListItemIcon>\n                  <ListItemText primary=\"Start a new Project\" />\n                </ListItem>\n              </LightTooltip>\n            }\n          </NavLink>\n        </List>\n        <Divider />\n        <List>\n          <ListSubheader>\n            {open ? 'Workflow' : <LightTooltip title=\"Workflow\" placement=\"top\">\n              <strong>W</strong>\n            </LightTooltip>}\n          </ListSubheader>\n          <NavLink to=\"/inbox\">\n            {\n              open ? \n              <ListItem button>\n                <ListItemIcon><InboxIcon /></ListItemIcon>\n                <ListItemText primary=\"Inbox\" />\n              </ListItem> : \n              <LightTooltip title=\"Inbox\" placement=\"top\">\n                <ListItem button>\n                  <ListItemIcon><InboxIcon /></ListItemIcon>\n                  <ListItemText primary=\"Inbox\" />\n                </ListItem>\n              </LightTooltip>\n            }\n          </NavLink>\n          <NavLink to=\"/myProjects\">\n            {\n              open ? \n              <ListItem button>\n                <ListItemIcon><FolderSpecialIcon /></ListItemIcon>\n                <ListItemText primary=\"My Projects\" />\n              </ListItem> : \n              <LightTooltip title=\"My Projects\" placement=\"top\">\n                <ListItem button>\n                <ListItemIcon><FolderSpecialIcon /></ListItemIcon>\n                <ListItemText primary=\"My Projects\" />\n              </ListItem>\n              </LightTooltip>\n            }\n          </NavLink>\n          <NavLink to=\"/allProjects\">\n            {\n              open ? \n              <ListItem button>\n                <ListItemIcon><FolderIcon /></ListItemIcon>\n                <ListItemText primary=\"All Projects\" />\n              </ListItem> : \n              <LightTooltip title=\"All Projects\" placement=\"top\">\n                <ListItem button>\n                  <ListItemIcon><FolderIcon /></ListItemIcon>\n                  <ListItemText primary=\"All Projects\" />\n                </ListItem>\n              </LightTooltip>\n            }\n          </NavLink>\n        </List>\n        <Divider />\n        <List>\n          <ListSubheader>\n            {open ? 'Asset Library' : <LightTooltip title=\"Asset Library\" placement=\"top\">\n              <strong>AL</strong>\n            </LightTooltip>}\n          </ListSubheader>\n          <NavLink to=\"/search\">\n            {\n              open ? \n              <ListItem button>\n                <ListItemIcon><LocationSearchingIcon /></ListItemIcon>\n                <ListItemText primary=\"Search\" />\n              </ListItem> : \n              <LightTooltip title=\"Search\" placement=\"top\">\n                <ListItem button>\n                  <ListItemIcon><LocationSearchingIcon /></ListItemIcon>\n                  <ListItemText primary=\"Search\" />\n                </ListItem>\n              </LightTooltip>\n            }\n          </NavLink>\n          <NavLink to=\"/browse\">\n            {\n              open ? \n              <ListItem button>\n                <ListItemIcon><SearchIcon /></ListItemIcon>\n                <ListItemText primary=\"Browse\" />\n              </ListItem> : \n              <LightTooltip title=\"Browse\" placement=\"top\">\n                <ListItem button>\n                  <ListItemIcon><SearchIcon /></ListItemIcon>\n                  <ListItemText primary=\"Browse\" />\n                </ListItem>\n              </LightTooltip>\n            }\n          </NavLink>\n        </List>\n      <Divider />\n      <List>\n        <ListSubheader>\n          {open ? 'Reports' : <LightTooltip title=\"Reports\" placement=\"top\">\n              <strong>R</strong>\n            </LightTooltip>}\n        </ListSubheader>\n      </List>\n      <Divider />\n      </Drawer>\n\n      {/* TODO: Add necessary components here */}\n    </div>\n  );\n}\n\nexport default Navbar\n","C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Reducers\\rootReducer.js",[],"C:\\Tryouts\\Sample_Project_React\\karomi\\src\\Actions\\Action.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"93","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":23,"column":6,"nodeType":"96","endLine":23,"endColumn":8,"suggestions":"97"},{"ruleId":"89","severity":1,"message":"98","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":15},{"ruleId":"99","severity":1,"message":"100","line":108,"column":3,"nodeType":"101","messageId":"102","endLine":183,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":196,"column":6,"nodeType":"96","endLine":196,"endColumn":8,"suggestions":"103"},{"ruleId":"89","severity":1,"message":"104","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":15},{"ruleId":"89","severity":1,"message":"105","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":18},{"ruleId":"89","severity":1,"message":"106","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":16},{"ruleId":"89","severity":1,"message":"107","line":13,"column":8,"nodeType":"91","messageId":"92","endLine":13,"endColumn":23},{"ruleId":"89","severity":1,"message":"108","line":14,"column":8,"nodeType":"91","messageId":"92","endLine":14,"endColumn":24},{"ruleId":"89","severity":1,"message":"109","line":19,"column":8,"nodeType":"91","messageId":"92","endLine":19,"endColumn":16},{"ruleId":"89","severity":1,"message":"110","line":29,"column":8,"nodeType":"91","messageId":"92","endLine":29,"endColumn":14},{"ruleId":"89","severity":1,"message":"111","line":113,"column":9,"nodeType":"91","messageId":"92","endLine":113,"endColumn":14},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["114"],"'Divider' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["115"],"'Toolbar' is defined but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'MailIcon' is defined but never used.","'Button' is defined but never used.","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"116","fix":"118"},"Update the dependencies array to be: [props]",{"range":"119","text":"120"},{"range":"121","text":"120"},[621,623],"[props]",[5149,5151]]